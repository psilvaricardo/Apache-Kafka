spring:
  profiles:
    active: local
server:
  port: 8081

---

spring:
  profiles: local
  kafka:
    consumer:
      bootstrap-servers: localhost:9092,localhost:9093,localhost:9094
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: library-events-listener-group
  # this setup is for the DB connection
  datasource:
    url: jdbc:h2:mem:test
    driver-class-name: org.h2.Driver
  # this is the JPA where we configure which DB we are going to talk to
  jpa:
    database: h2
    database-platform: org.hibernate.dialect.H2Dialect
    # this is going to generate the tables for you
    generate-ddl: true
  # in-memory DB view, so we can see the DB in browser
  h2:
    console:
      enabled: true

---

spring:
  profiles: nonprod
  kafka:
    consumer:
      bootstrap-servers: localhost:9092,localhost:9093,localhost:9094
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: library-events-listener-group

---

spring:
  profiles: prod
  kafka:
    consumer:
      bootstrap-servers: localhost:9092,localhost:9093,localhost:9094
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: library-events-listener-group

